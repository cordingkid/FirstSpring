<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Notice">

	<sql id="noticeSearch">
		<if test="searchType != null and searchType == 'subject'">
			and (botitle like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'writer'">
			and (bowriter like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'subandwri'">
			and (
			bowriter like '%'||#{searchWord}||'%' 
			or
			botitle like '%'||#{searchWord}||'%'
			)
		</if>
	</sql>

	<insert id="insertNotice" parameterType="noticeVO" useGeneratedKeys="true">
		<selectKey keyProperty="no" order="BEFORE" resultType="int">
			select seq_notice.nextval from dual
		</selectKey>
		insert into notice(
			bono, botitle, bocontent, bowriter, bodate
		) values (
			#{no}, #{subject}, #{content}, #{writer}, sysdate
		)
	</insert>
	
	<update id="incrementHit" parameterType="int">
		update notice
		set
			bohit = bohit + 1
		where bono = #{no}
	</update>
	
	<select id="selectNotice" parameterType="int" resultType="noticeVO">
		select 
			bono no,
			botitle subject,
			bocontent content,
			bowriter writer, 
			bodate regDate, 
			bohit hit
		from notice 
		where bono = #{no}
	</select>
	
	<delete id="deleteNotice" parameterType="int">
		delete from notice
		where bono = #{no}
	</delete>
	
	<update id="updateNotice" parameterType="noticeVO">
		update notice
		set
			botitle = #{subject},
			bocontent = #{content},
			bodate = sysdate
		where bono = #{no}
	</update>
	
	<select id="selectNoticeCount" parameterType="pagingVO" resultType="int">
		select count(bono)
		from notice
		where 1=1
		<include refid="noticeSearch"/>
	</select>
	
	<select id="selectNoticeList" parameterType="pagingVO" resultType="noticeVO">
		select b.*
		from(
			select
				a.*, row_number() over (order by a.no desc) rnum
			from(
				select
					bono no, botitle subject, bocontent content, bowriter writer, 
					to_char(bodate, 'yy-mm-dd hh24:mi:ss') regDate, bohit hit
				from notice 
				where 1=1
				<include refid="noticeSearch"/>
				order by no desc
			) a
		) b
		<![CDATA[
			where b.rnum >= #{startRow} and b.rnum <= #{endRow}
		]]>
		<!-- select
					bono no, botitle subject, bocontent content, bowriter writer, 
					to_char(bodate, 'yy-mm-dd hh24:mi:ss') regDate, bohit hit
				from notice 
				where 1=1
				order by bono desc -->
	</select>

	<select id="allCount" resultType="int">
		select count(bono)
		from notice
	</select>
	
</mapper>












